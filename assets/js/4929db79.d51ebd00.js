"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8155],{3905:(e,n,r)=>{r.d(n,{Zo:()=>u,kt:()=>h});var t=r(7294);function s(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function o(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?o(Object(r),!0).forEach((function(n){s(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function l(e,n){if(null==e)return{};var r,t,s=function(e,n){if(null==e)return{};var r,t,s={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||(s[r]=e[r]);return s}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(s[r]=e[r])}return s}var c=t.createContext({}),a=function(e){var n=t.useContext(c),r=n;return e&&(r="function"==typeof e?e(n):i(i({},n),e)),r},u=function(e){var n=a(e.components);return t.createElement(c.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},p=t.forwardRef((function(e,n){var r=e.components,s=e.mdxType,o=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=a(r),h=s,f=p["".concat(c,".").concat(h)]||p[h]||m[h]||o;return r?t.createElement(f,i(i({ref:n},u),{},{components:r})):t.createElement(f,i({ref:n},u))}));function h(e,n){var r=arguments,s=n&&n.mdxType;if("string"==typeof e||s){var o=r.length,i=new Array(o);i[0]=p;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:s,i[1]=l;for(var a=2;a<o;a++)i[a]=r[a];return t.createElement.apply(null,i)}return t.createElement.apply(null,r)}p.displayName="MDXCreateElement"},1929:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>a});var t=r(7462),s=(r(7294),r(3905));const o={sidebar_position:6},i=void 0,l={unversionedId:"JavaScript/PromiseA+\u6e90\u7801\u5b9e\u73b0",id:"JavaScript/PromiseA+\u6e90\u7801\u5b9e\u73b0",title:"PromiseA+\u6e90\u7801\u5b9e\u73b0",description:"",source:"@site/docs/JavaScript/PromiseA+\u6e90\u7801\u5b9e\u73b0.md",sourceDirName:"JavaScript",slug:"/JavaScript/PromiseA+\u6e90\u7801\u5b9e\u73b0",permalink:"/docs/JavaScript/PromiseA+\u6e90\u7801\u5b9e\u73b0",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/JavaScript/PromiseA+\u6e90\u7801\u5b9e\u73b0.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"hash\u548chistory\u7684\u533a\u522b",permalink:"/docs/JavaScript/hash\u548chistory\u7684\u533a\u522b"}},c={},a=[],u={toc:a};function m(e){let{components:n,...r}=e;return(0,s.kt)("wrapper",(0,t.Z)({},u,r,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},"class MyPromise {\n    \n    constructor(func) {\n        this.PromiseState = 'pending';\n        this.PromiseResult = null;\n        this.onFulfilledCallbacks = [];\n        this.onRejectedCallbacks = [];\n        try {\n            func(this.resolve.bind(this), this.reject.bind(this));\n        } catch (e) {\n            this.reject(e)\n        }\n    }\n\n    resolve(value) {\n        if (this.PromiseState === 'pending') {\n            setTimeout(() => {\n                this.PromiseState = 'fulfilled';\n                this.PromiseResult = value;\n                this.onFulfilledCallbacks.forEach(callback => callback(value))\n            })\n        }\n    }\n\n    reject(reason) {\n        if (this.PromiseState === 'pending') {\n            setTimeout(() => {\n                this.PromiseState = 'rejected';\n                this.PromiseResult = reason;\n                this.onRejectedCallbacks.forEach(callback => callback(reason))\n            })\n        }\n    }\n\n\n    then(onFulfilled, onRejected) {\n        onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : value => value;\n        onRejected = typeof onRejected === 'function' ? onRejected : reason => {\n            throw reason\n        };\n        let promise2 = new MyPromise((resolve, reject) => {\n            if (this.PromiseState === 'fulfilled') {\n                setTimeout(() => {\n                    try {\n                        let x = onFulfilled(this.PromiseResult);\n                        resolvePromise(promise2, x, resolve, reject);\n                    } catch (e) {\n                        reject(e);\n                    }\n                })\n            }\n            if (this.PromiseState === 'rejected') {\n                setTimeout(() => {\n                    try {\n                        let x = onRejected(this.PromiseResult);\n                        resolvePromise(promise2, x, resolve, reject);\n                    } catch (e) {\n                        reject(e);\n                    }\n                })\n            }\n            if (this.PromiseState === 'pending') {\n                this.onFulfilledCallbacks.push(() => {\n                    try {\n                        let x = onFulfilled(this.PromiseResult);\n                        resolvePromise(promise2, x, resolve, reject);\n                    } catch (e) {\n                        reject(e);\n                    }\n                });\n                this.onRejectedCallbacks.push(() => {\n                    try {\n                        let x = onRejected(this.PromiseResult);\n                        resolvePromise(promise2, x, resolve, reject);\n                    } catch (e) {\n                        reject(e);\n                    }\n                });\n            }\n        })\n        return promise2;\n    }\n\n    // catch\n    catch(onRejected) {\n        return this.then(undefined, onRejected);\n    }\n\n    // finally\n    finally(callback) {\n        let P = this.constructor;\n        return this.then(\n            value  => P.resolve(callback()).then(() => value),\n            reason => P.resolve(callback()).then(() => { throw reason })\n        );\n    }\n    \n    // resolve\n    static resolve(value) {\n        if (value instanceof MyPromise) {\n            return value;\n        } else if (value instanceof Object && then in value) {\n            return new MyPromise((resolve, reject) => {\n                value.then(resolve, reject);\n            })\n        }\n        return new MyPromise((resolve) => {\n            resolve(value);\n        })\n    }\n    \n    // reject\n    static reject(reason) {\n        return new MyPromise((resolve, reject) => {\n            reject(reason);\n        })\n    }\n    \n    // all\n    // \u4efb\u610f\u4e00\u4e2a promise \u88ab reject \uff0c\u5c31\u4f1a\u7acb\u5373\u88ab reject \uff0c\u5e76\u4e14 reject \u7684\u662f\u7b2c\u4e00\u4e2a\u629b\u51fa\u7684\u9519\u8bef\u4fe1\u606f\uff0c\u53ea\u6709\u6240\u6709\u7684 promise \u90fd resolve \u65f6\u624d\u4f1a resolve \u6240\u6709\u7684\u7ed3\u679c\n    static all(promises) {\n        return new MyPromise((reslove, reject) => {\n            if (Array.isArray(promises)) {\n                let count = 0;\n                let result = [];\n                if (promises.length === 0) {\n                    resolve(promises);\n                }\n                promises.forEach((item, index) => {\n                    if (item instanceof MyPromise) {\n                        MyPromise.resolve(item).then(\n                            (value) => {\n                                count++;\n                                result[index] = value;\n                                count === promises.length && resolve(result);\n                            },\n                            (reason) => {\n                                reject(reason);\n                            },\n                        )\n                    } else {\n                        count++;\n                        result[index] = item;\n                        count === promises.length && resolve(result);\n                    }\n                })\n            } else {\n                return reject(new TypeError('arguments is not iterable'));\n            }\n        })\n    }\n    \n    // allSettled\n    static allSettled(promises) {\n        return new MyPromise((reslove, reject) => {\n            if (Array.isArray(promises)) {\n                let count = 0;\n                let result = [];\n                if (promises.length === 0) {\n                    resolve(promises);\n                }\n                promises.forEach((item, index) => {\n                    MyPromise.resolve(item).then(\n                        (value) => {\n                            count++;\n                            result[index] = {\n                                status: 'fulfilled',\n                                value\n                            }\n                            count === promises.length && resolve(result);\n                        },\n                        (reason) => {\n                            count++;\n                            result[index] = {\n                                status: 'rejected',\n                                reason\n                            }\n                            count === promises.length && resolve(result);\n                        },\n                    )\n                })\n            } else {\n                return reject(new TypeError('arguments is not iterable'))\n            }\n        })\n    }\n\n    // any\n    // \u53ea\u8981\u5176\u4e2d\u7684\u4e00\u4e2a promise \u6210\u529f\uff0c\u5c31\u8fd4\u56de\u90a3\u4e2a\u5df2\u7ecf\u6210\u529f\u7684 promise\n    // \u5982\u679c\u53ef\u8fed\u4ee3\u5bf9\u8c61\u4e2d\u6ca1\u6709\u4e00\u4e2a promise \u6210\u529f\uff08\u5373\u6240\u6709\u7684 promises \u90fd\u5931\u8d25/\u62d2\u7edd\uff09\uff0c\u5c31\u8fd4\u56de\u4e00\u4e2a\u5931\u8d25\u7684 promise \u548c AggregateError \u7c7b\u578b\u7684\u5b9e\u4f8b\uff0c\u5b83\u662f Error \u7684\u4e00\u4e2a\u5b50\u7c7b\uff0c\u7528\u4e8e\u628a\u5355\u4e00\u7684\u9519\u8bef\u96c6\u5408\u5728\u4e00\u8d77\n    static any(promises) {\n        return new MyPromise((resolve, reject) => {\n            if (Array.isArray(promises)) {\n                let count = 0;\n                let errors = [];\n                if (promises.length === 0) {\n                    return reject(new AggregateError('All promises were rejected'));\n                }\n                promises.forEach((item, index) => {\n                    MyPromise.resolve(item).then(\n                        (value) => {\n                            resolve(value);\n                        },\n                        (reason) => {\n                            count++;\n                            errors.push(reason);\n                            count === promises.length && reject(new AggregateError(errors))\n                        },\n                    )\n                })\n            } else {\n                return reject(new TypeError('arguments is not iterable'));\n            }\n        })\n    }\n\n    // race\n    static race(promsies) {\n        return new MyPromise((resolve, reject) => {\n            if (Array.isArray(promsies)) {\n                if (promsies.length > 0) {\n                    promsies.forEach((item) => {\n                        MyPromise.resolve(item).then(resolve, reject);\n                    })\n                }\n            } else {\n                return reject(new TypeError('arguments is not iterable'));\n            }\n        })\n    }\n}\n\n\nfunction resolvePromise(promise2, x, resolve, reject) {\n    if (x === promise2) {\n        return reject(new TypeError('Chaining cycle detected for promise'));\n    }\n    if (x instanceof MyPromise) {\n        if (x.PromiseState === 'pending') {\n            x.then(\n                y => {\n                    resolvePromise(promise2, y, resolve, reject);\n                },\n                reject\n            )\n        } else if (x.PromiseState === 'fulfilled') {\n            resolve(x.PromiseResult);\n        } else if (x.PromiseState === 'rejected') {\n            reject(x.PromiseResult);\n        }\n    } else if (x !== null && (typeof x === 'object' || typeof x === 'function')) {\n        let then;\n        try {\n            then = x.then;\n        } catch (e) {\n            return reject(e);\n        }\n        if (typeof then === 'function') {\n            let called = false;\n            try {\n                then.call(\n                    x,\n                    y => {\n                        if (called) return;\n                        called = true;\n                        resolvePromise(promise2, y, resolve, reject);\n                    },\n                    r => {\n                        if (called) return;\n                        called = true;\n                        reject(r);\n                    },\n                )\n            } catch (e) {\n                if (called) return;\n                called = true;\n                reject(e);\n            }\n        } else {\n            resolve(x);\n        }\n    } else {\n        return resolve(x);\n    }\n}\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},"// promise \u4e2d\u5e38\u89c1\u7684\u94fe\u5f0f\u8c03\u7528\n\nlet promise = new Promise((resolve, reject) => {\n    resolve('First resolve');\n});\n\n// 1. \u901a\u8fc7return\u4f20\u9012\u7ed3\u679c\npromise.then((res) => {\n    return res; // \u4f20\u9012\u4e00\u4e2a\u666e\u901a\u503c\n}).then((res) => {\n    console.log(res); // First resolve\n});\n\n// 2. \u901a\u8fc7\u65b0\u7684promsise resolve\u7ed3\u679c\npromise.then((res) => {\n    return res; // \u4f20\u9012\u4e00\u4e2a\u666e\u901a\u503c\n}).then((res) => {\n    return new Promise((resolve, reject) => {// \u4f20\u9012\u4e00\u4e2apromise\u5b9e\u4f8b\n        resolve(res);\n    });\n}).then((res) => {\n    console.log(res); // First resolve\n})\n\n// 3. \u901a\u8fc7\u65b0\u7684promsise reject\u539f\u56e0\npromise.then((res) => {\n    return res; // \u4f20\u9012\u4e00\u4e2a\u666e\u901a\u503c\n}).then((res) => {\n    return new Promise((resolve, reject) => {// \u4f20\u9012\u4e00\u4e2apromise\u5b9e\u4f8b\n        reject('ERROR');\n    });\n}).then(\n    (res) => {\n        console.log(res);\n    },\n    (reason) => {\n        console.log(reason); // ERROR\n    }\n)\n\n// 4. then\u8d70\u4e86\u5931\u8d25\u7684\u51fd\u6570\u540e\u518d\u8d70then\npromise.then((res) => {\n    return res; // \u4f20\u9012\u4e00\u4e2a\u666e\u901a\u503c\n}).then((res) => {\n    return new Promise((resolve, reject) => {// \u4f20\u9012\u4e00\u4e2apromise\u5b9e\u4f8b\n        reject('ERROR');\n    });\n}).then(\n    (res) => {\n        console.log(res);\n    },\n    (reason) => {\n        console.log(reason); // ERROR\n        // \u9ed8\u8ba4return undefined\n    }\n).then(\n    (res) => {\n        console.log(res); // undefind\n    },\n    (reason) => {\n        console.log(reason);\n    }\n)\n\n// 4. then\u4e2dthrow new Error\npromise.then((res) => {\n    return res; // \u4f20\u9012\u4e00\u4e2a\u666e\u901a\u503c\n}).then((res) => {\n    return new Promise((resolve, reject) => {// \u4f20\u9012\u4e00\u4e2apromise\u5b9e\u4f8b\n        reject('ERROR');\n    });\n}).then(\n    (res) => {\n        console.log(res);\n    },\n    (reason) => {\n        console.log(reason); // ERROR\n        // \u9ed8\u8ba4return undefined\n    }\n).then(\n    (res) => {\n        throw new Error('throw error');\n    },\n).then(\n    (res) => {\n        console.log(res);\n    },\n    (reason) => {\n        console.log(reason); // throw error\n    }\n)\n\n\n// 5. \u7528catch\u6355\u83b7\u5f02\u5e38\n// catch\u5728promise\u6e90\u7801\u5c42\u9762\u4e0a\u5c31\u662f\u4e00\u4e2athen\npromise.then((res) => {\n    return res; // \u4f20\u9012\u4e00\u4e2a\u666e\u901a\u503c\n}).then((res) => {\n    return new Promise((resolve, reject) => {// \u4f20\u9012\u4e00\u4e2apromise\u5b9e\u4f8b\n        reject('ERROR');\n    });\n}).then(\n    (res) => {\n        console.log(res);\n    },\n    (reason) => {\n        console.log(reason); // ERROR\n        // \u9ed8\u8ba4return undefined\n    }\n).then(\n    (res) => {\n        throw new Error('throw error');\n    },\n).then(\n    (res) => {\n        console.log(res);\n    }\n).catch((err) => {\n    console.log(err); // throw error\n});\n")))}m.isMDXComponent=!0}}]);